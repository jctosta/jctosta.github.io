<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Extraindo endereços de email em páginas web]]></title>
      <url>/2017/12/01/Extraindo-enderecos-de-email-em-paginas-web/</url>
      <content type="html"><![CDATA[<h2 id="Introducao"><a href="#Introducao" class="headerlink" title="Introdução"></a>Introdução</h2><p>Uma das coisas mais interessantes na linguagem Javascript é a versatilidade da mesma, oferecendo aos usuários múltiplas maneiras de executar uma mesma tarefa.</p>
<p>Nos exemplos a seguir, demostrarei várias maneiras de extrair endereços de email (links com <code>mailto:</code>) de uma página web, buscando ilustrar as diferenças entre cada uma:</p>
<h2 id="Dados-de-Referencia"><a href="#Dados-de-Referencia" class="headerlink" title="Dados de Referência"></a>Dados de Referência</h2><p>O exemplos apresentados neste post foram testados em um documento HTML com o seguinte formato:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Example Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:user1@teste.com"</span>&gt;</span>user1@teste.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:user2@teste.com"</span>&gt;</span>user2@teste.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:user3@teste.com"</span>&gt;</span>user3@teste.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:user4@teste.com"</span>&gt;</span>user4@teste.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:user5@teste.com"</span>&gt;</span>user5@teste.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>O corpo do documento foi criado utilizando a ferramenta Emmet, presente em várias IDE’s e editores de texto, abaixo a string utilizada:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div&gt;a[href="mailto:user$@teste.com"]&#123;user$@teste.com&#125;*5000</span><br></pre></td></tr></table></figure>
<h2 id="Codigos-Utilizados"><a href="#Codigos-Utilizados" class="headerlink" title="Códigos Utilizados"></a>Códigos Utilizados</h2><h3 id="ES-5"><a href="#ES-5" class="headerlink" title="ES 5"></a>ES 5</h3><p>No primeiro exemplo usaremos ES 5 e funções tradicionais. Neste cenário, o código em questão é extremamente verboso, porém, totalmente legível e auto explicativo.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isEmail</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> el.getAttribute(<span class="string">'href'</span>).indexOf(<span class="string">'mailto'</span>) &gt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getEmailValue</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> el.getAttribute(<span class="string">'href'</span>).substring(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">listPageEmails</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> links = <span class="built_in">Array</span>.from(<span class="built_in">document</span>.querySelectorAll(<span class="string">'a'</span>));</span><br><span class="line">  links = links.filter(isEmail);</span><br><span class="line">  links = links.map(getEmailValue);</span><br><span class="line">  <span class="keyword">return</span> links.join(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(listPageEmails());</span><br></pre></td></tr></table></figure>
<h3 id="ES2015"><a href="#ES2015" class="headerlink" title="ES2015+"></a>ES2015+</h3><p>No exemplo seguinte, nosso código utilizará a versão 2015 do Ecma Script e suas famosas <a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">Arrow Functions</a> para simplificar o código, ao custo da legibilidade:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> links = <span class="built_in">Array</span>.from(</span><br><span class="line">  <span class="built_in">document</span>.querySelectorAll(<span class="string">'a'</span>))</span><br><span class="line">	.filter(<span class="function">(<span class="params">el</span>) =&gt;</span> &#123; </span><br><span class="line">    <span class="keyword">return</span> (el.getAttribute(<span class="string">'href'</span>).indexOf(<span class="string">'mailto'</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">	.map(<span class="function">(<span class="params">el</span>) =&gt;</span> &#123; </span><br><span class="line">    <span class="keyword">return</span> el.getAttribute(<span class="string">'href'</span>).substring(<span class="number">7</span>) </span><br><span class="line">  &#125;)</span><br><span class="line">	.join(<span class="string">'\n'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(links);</span><br></pre></td></tr></table></figure>
<p>Perceba o quanto o código se aproxima dos conceitos de programação funcional, essa é uma das vantagens que o ES2015 trouxe para a linguagem, oferecendo aos desenvolvedores técnicas antes apenas disponíveis a linguagens puramente funcionais.</p>
<h3 id="ES2015-Linha-Unica"><a href="#ES2015-Linha-Unica" class="headerlink" title="ES2015+ (Linha Única)"></a>ES2015+ (Linha Única)</h3><p>O próximo exemplo é uma variação do código anterior, porém, condensando todas as instruções em uma única linha:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.from(<span class="built_in">document</span>.querySelectorAll(<span class="string">'a'</span>)).filter(<span class="function"><span class="params">el</span> =&gt;</span> (el.getAttribute(<span class="string">'href'</span>).indexOf(<span class="string">'mailto'</span>) &gt;= <span class="number">0</span>)).map(<span class="function"><span class="params">el</span> =&gt;</span> el.getAttribute(<span class="string">'href'</span>).substring(<span class="number">7</span>)).join(<span class="string">'\n'</span>);</span><br></pre></td></tr></table></figure>
<h3 id="ES2015-Variacao"><a href="#ES2015-Variacao" class="headerlink" title="ES2015 (Variação)"></a>ES2015 (Variação)</h3><p>No último exemplo, temos uma nova variação da versão funcional, porém ainda mais otimizada, substituindo a método filter nativo do objeto Array por otimizações nos seletores CSS.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.from(<span class="built_in">document</span>.querySelectorAll(<span class="string">'a[href*="mailto"]'</span>)).map(<span class="function"><span class="params">el</span> =&gt;</span> el.getAttribute(<span class="string">'href'</span>).substring(<span class="number">7</span>)).join(<span class="string">'\n'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h2><p>A ferramenta jsperf foi utilizada para comparar a performance das duas abordagens apresentadas, operando sobre uma massa de dados com 10000 (dez mil) elementos.</p>
<p><img src="/images/resultado_jsperf.png" alt="Resultado das Operações"></p>
<p>Observando os resultados, podemos determinar que o uso de CSS expressions é mais performático do que o método filter, em aproximadamente 10%, considerando o cenário apresentado, podendo este número ser modificado em condições distintas.</p>
<p>O benchmark utilizado está disponível no seguinte endereço:</p>
<ul>
<li><a href="https://jsperf.com/array-filter-vs-css-selector-filter-performance/1" target="_blank" rel="noopener">https://jsperf.com/array-filter-vs-css-selector-filter-performance/1</a></li>
</ul>
<h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclusão"></a>Conclusão</h2><p>Neste artigo, foquei em demonstrar as diferentes maneiras de executar uma mesma tarefa em Javascript, além de utilizar ferramentas para monitorar a performance de um determinado método, conhecimento útil em vários casos. </p>
<h2 id="Referencias"><a href="#Referencias" class="headerlink" title="Referências"></a>Referências</h2><ul>
<li><a href="https://emmet.io/" target="_blank" rel="noopener">Emmet</a></li>
<li><a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">Arrow Functions</a></li>
<li><a href="http://eloquentjavascript.net/1st_edition/chapter6.html" target="_blank" rel="noopener">Programação Funcional</a></li>
<li><a href="https://jsperf.com" target="_blank" rel="noopener">JSPerf</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> tutoriais </tag>
            
            <tag> analise </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/12/01/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
